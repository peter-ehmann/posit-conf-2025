[
  {
    "objectID": "pharmaverse.html",
    "href": "pharmaverse.html",
    "title": "End-to-End Submissions in R with the Pharmaverse",
    "section": "",
    "text": "Pharmaverse Examples\nResource with example datasets\n\n\nIntroduction\nSlides\n\nInstructors\n\nDaniel Sjoberg (MSK -&gt; Roche/Genentech)\nBecca Krouse (GSK)\nBen Straub (GSK)\nRam Ganapathy (Syneos -&gt; Roche/Genentech)\n\n\n\nWhat is this workshop\n\nGet data into CDISC standards (ADaM and SDTM domains)\nPharmaverse\nAlign pharma industry on a standard process\nData collection to submission\nR packages to support Clinical Reporting in R\nCreate SDTM from raw data (CDASH and non-CDASH formats)\nCreate ADaM datasets from SDTM\nMultiple ways to create tables\n\n\n\nEnd-to-End\n\npharmaverse raw\npharmaverse SDTM\npharmaverse ADaM\n\n\n\nExercise 1\n\nCode\n# Let's warm-up!\n\nlibrary(dplyr)\nlibrary(pharmaverseadam)\n\n# Using dplyr:\n#  - From the ADSL dataset:\n#   - Subset to the safety population (SAFFL == \"Y\")\n#   - calculate the number of unique subjects in each treatment group (TRT01A)  \n\n# View(pharmaverseadam::adsl)\n\nknitr::kable(\n  pharmaverseadam::adsl |&gt; \n    dplyr::filter(SAFFL == \"Y\") |&gt; \n    dplyr::group_by(TRT01A) |&gt;\n    dplyr::summarise(n = dplyr::n_distinct(SUBJID))\n)\n\n\n\n\nTRT01A\nn\n\n\n\n\nPlacebo\n86\n\n\nXanomeline High Dose\n72\n\n\nXanomeline Low Dose\n96\n\n\n\n\n\n\nSDTM Mapping\nSlides\n\nSDTM\nStudy Data Tabulation Model\n\nMapping raw data to standards\nraw (EDC) to SDTM is difficult\nSDTM across companies is standard\nSDTM -&gt; ADaM is easy\n\n\n\nsdtm.oak package\n\nAccommodates varying raw data structures from different EDC systems and vendors\n\n\n\nAlgorithms\n\nvariables with similar mapping algorithms are grouped together\n16,000 vars can be grouped into 22 groups\nalgorithms are backbone of oak\n\nassign_no_ct() -&gt; no controlled terminology\nassign_ct() -&gt; 1:1 mapping with controlled terminology\nassign_datetime() -&gt; ISO8601 format\nhardcode_ct() -&gt; text on EDC (eg units)\n\n\nCompared to dplyr\n\ndo not have to write case_when statements\n\n\n\nTopic Variables\n\nIdentifier (ID of record)\nQualifier (what is the variable)\nTiming (when was variable collected)\n\n\n\nEDC Domains\n\n\n\nEDC Domain\nCode\n\n\n\n\nDemographics\nDM\n\n\nMedical History\nMH\n\n\nAdverse Events\nAE\n\n\nConcomitant Medications\nCM\n\n\nLaboratory Results\nLB\n\n\nVital Signs\nVS\n\n\nPhysical Examination\nPE\n\n\nStudy Drug Administration\nDA\n\n\nSubject Disposition\nDS\n\n\nEfficacy Assessments\nEF\n\n\nSafety Assessments\nSA\n\n\nQuestionnaires\nQS\n\n\nImaging Assessments\nIMG\n\n\nRandomization\nRAND\n\n\nProtocol Deviations\nPD\n\n\n\n\n\nExample Raw -&gt; SDTM mapping\nCode\n\nvs Domain example\ndm domain example\n\n\nCode\nlibrary(sdtm.oak)\nlibrary(pharmaverseraw)\nlibrary(dplyr)\n\n# AE aCRF - https://github.com/pharmaverse/pharmaverseraw/blob/main/vignettes/articles/aCRFs/AdverseEvent_aCRF.pdf\n\n# Read in Raw dataset ----\nae_raw &lt;- pharmaverseraw::ae_raw\n\n# Generate oak_id_vars ----\nae_raw &lt;- ae_raw %&gt;%\n  generate_oak_id_vars(\n    pat_var = \"PATNUM\",\n    raw_src = \"ae_raw\"\n  )\n\n# Read in Controlled Terminology\nstudy_ct &lt;-  data.frame(\n  codelist_code = c(\"C66742\", \"C66742\"),\n  term_code = c(\"C49487\", \"C49488\"),\n  term_value = c(\"N\", \"Y\"),\n  collected_value = c(\"No\", \"Yes\"),\n  term_preferred_term = c(\"No\", \"Yes\"),\n  term_synonyms = c(\"No\", \"Yes\"),\n  stringsAsFactors = FALSE\n)\n\n# Exercise 1 ------------------------------------------------\n# Map AETERM from raw_var=IT.AETERM, tgt_var=AETERM\nae &lt;-\n  # Derive topic variable\n  # Map AETERM using assign_no_ct\n  assign_no_ct(\n    raw_dat = ae_raw,\n    raw_var = \"IT.AETERM\",\n    tgt_var = \"AETERM\",\n    id_vars = oak_id_vars()\n  )\n\n# Exercise 2 ------------------------------------------------\n# Map AESER from raw_var=IT.AESER, tgt_var=AESER. Codelist code for AESDTH is C66742\nae &lt;- ae %&gt;%\n  # Map AESER using ??\n  assign_ct(\n    raw_dat = ae_raw,\n    raw_var = \"IT.AESER\",\n    tgt_var = \"AESER\",\n    ct_spec = study_ct,\n    ct_clst = \"C66742\",\n    id_vars = oak_id_vars()\n  )\n\n# Exercise 3 ------------------------------------------------\n# Map AESDTH from raw_var=IT.AESDTH, tgt_var=AESDTH. Annotation text is \n# If \"Yes\" then AESDTH = \"Y\" else Not Submitted. Codelist code for AESDTH is C66742\n\nae &lt;- ae %&gt;%\n  # Map AESDTH using condition_add & assign_ct, raw_var=IT.AESDTH, tgt_var=AESDTH\n  assign_ct(\n    raw_dat = condition_add(ae_raw, IT.AESDTH == \"Yes\"),\n    raw_var = \"IT.AESDTH\",\n    tgt_var = \"AESDTH\",\n    ct_spec = study_ct,\n    ct_clst = \"C66742\",\n    id_vars = oak_id_vars()\n  )\n\n\n\n\nADaM\n\nADSL - Subject Level Data\n\nEach subject has 1 row/record\n\n\n\nADVS - Vital Signs dataset\n\nADVS is a basic data structure\nfocus is on records, not variables\n\n\nApply info from Specs\nDerive vars and records\nPrepare dataset for submissions\n\n\n\nExercise 3\n\nCode\n# Exercise 1\n# Update date and time imputation arguments so that any dates or times\n# that are imputed are the last month/day of the year and 23:59:59\n\nlibrary(tibble)\nlibrary(lubridate)\nlibrary(admiral)\n\nposit_mh &lt;- tribble(\n  ~USUBJID, ~MHSTDTC,\n  1,        \"2019-07-18T15:25:40\",\n  1,        \"2019-07-18T15:25\",\n  1,        \"2019-07-18\",\n  2,        \"2024-02\",\n  2,        \"2019\",\n  2,        \"2019---07\",\n  3,        \"\"\n)\n\npaste0(\"Problem 1\")\n\n[1] “Problem 1”\n\nCode\nknitr::kable(\n  derive_vars_dtm(\n    dataset = posit_mh,\n    new_vars_prefix = \"AST\",\n    dtc = MHSTDTC,\n    highest_imputation = \"M\",\n    date_imputation = \"last\",\n    time_imputation = \"last\"\n  )\n)\n\n\n\n\nUSUBJID\nMHSTDTC\nASTDTM\nASTDTF\nASTTMF\n\n\n\n\n1\n2019-07-18T15:25:40\n2019-07-18 15:25:40\nNA\nNA\n\n\n1\n2019-07-18T15:25\n2019-07-18 15:25:59\nNA\nS\n\n\n1\n2019-07-18\n2019-07-18 23:59:59\nNA\nH\n\n\n2\n2024-02\n2024-02-29 23:59:59\nD\nH\n\n\n2\n2019\n2019-12-31 23:59:59\nM\nH\n\n\n2\n2019—07\n2019-12-31 23:59:59\nM\nH\n\n\n3\n\nNA\nNA\nNA\n\n\n\n\nCode\n# Exercise 2\n# Update set_values_to argument for the formula\n# MAP Formula: MAP = (SYSBP + 2*DIABP) / 3\n\nADVS &lt;- tribble(\n  ~USUBJID,      ~PARAMCD, ~PARAM,                            ~AVALU,  ~AVAL, ~VISIT,\n  \"01-701-1015\", \"DIABP\",  \"Diastolic Blood Pressure (mmHg)\", \"mmHg\",    51, \"BASELINE\",\n  \"01-701-1015\", \"SYSBP\",  \"Systolic Blood Pressure (mmHg)\",  \"mmHg\",   121, \"BASELINE\",\n  \"01-701-1028\", \"DIABP\",  \"Diastolic Blood Pressure (mmHg)\", \"mmHg\",    79, \"BASELINE\",\n  \"01-701-1028\", \"SYSBP\",  \"Systolic Blood Pressure (mmHg)\",  \"mmHg\",   130, \"BASELINE\",\n) \n\npaste0(\"Problem 2\")\n\n[1] “Problem 2”\n\nCode\nknitr::kable(\n  derive_param_computed(\n    ADVS,\n    by_vars = exprs(USUBJID, VISIT),\n    parameters = c(\"SYSBP\", \"DIABP\"),\n    set_values_to = exprs(\n      AVAL = (AVAL.SYSBP + 2 * AVAL.DIABP) / 3,\n      PARAMCD = \"MAP\",\n      PARAM = \"Mean Arterial Pressure (mmHg)\",\n      AVALU = \"mmHg\",\n    )\n  )\n)\n\n\n\n\n\n\n\n\n\n\n\n\nUSUBJID\nPARAMCD\nPARAM\nAVALU\nAVAL\nVISIT\n\n\n\n\n01-701-1015\nDIABP\nDiastolic Blood Pressure (mmHg)\nmmHg\n51.00000\nBASELINE\n\n\n01-701-1015\nSYSBP\nSystolic Blood Pressure (mmHg)\nmmHg\n121.00000\nBASELINE\n\n\n01-701-1028\nDIABP\nDiastolic Blood Pressure (mmHg)\nmmHg\n79.00000\nBASELINE\n\n\n01-701-1028\nSYSBP\nSystolic Blood Pressure (mmHg)\nmmHg\n130.00000\nBASELINE\n\n\n01-701-1015\nMAP\nMean Arterial Pressure (mmHg)\nmmHg\n74.33333\nBASELINE\n\n\n01-701-1028\nMAP\nMean Arterial Pressure (mmHg)\nmmHg\n96.00000\nBASELINE\n\n\n\n\n\n\nARDs - Analysis Results Datasets\n\ntabulate and summarise Cat and Cont vars\ncards does summary stats\ncardx does statistical analysis\n\n\nExercise 4\n\nCode\n# ARD Exercise: Adverse Events summaries using {cards}\n\n\n# Setup: run this first! --------------------------------------------------\n\n# Load necessary packages\nlibrary(cards)\n\n# Import & subset data\nadsl &lt;- pharmaverseadam::adsl |&gt; \n  dplyr::filter(SAFFL==\"Y\")\n\nadae &lt;- pharmaverseadam::adae |&gt; \n  dplyr::filter(SAFFL==\"Y\") |&gt; \n  dplyr::filter(AESOC %in% unique(AESOC)[1:3]) |&gt; \n  dplyr::group_by(AESOC) |&gt; \n  dplyr::filter(AEDECOD %in% unique(AEDECOD)[1:3]) |&gt; \n  dplyr::ungroup()\n\n# Exercise ----------------------------------------------------------------\n\n# A. Calculate the number and percentage of *unique* subjects with at least one AE:\n#  - By each SOC (AESOC)\n#  - By each Preferred term (AEDECOD) within SOC (AESOC)\n# By every combination of treatment group (ARM) \n\nard_stack_hierarchical(\n  data = adae,\n  variables = c(AESOC,AEDECOD),\n  by = ARM, \n  id = USUBJID,\n  denominator = adsl\n) \n\ngroup1 group1_level group2 group2_level variable variable_level stat_name 1   ARM Placebo n 2   ARM Placebo N 3   ARM Placebo p 4   ARM Xanomeli… n 5   ARM Xanomeli… N 6   ARM Xanomeli… p 7   ARM Xanomeli… n 8   ARM Xanomeli… N 9   ARM Xanomeli… p 10 ARM Placebo  AESOC GASTROIN… n stat_label stat 1 n 86 2 N 254 3 % 0.339 4 n 84 5 N 254 6 % 0.331 7 n 84 8 N 254 9 % 0.331 10 n 12\n\nCode\n# B. [*BONUS*] Modify the code from part A to include overall number/percentage of\n# subjects with at least one AE, regardless of SOC and PT\n\nard_stack_hierarchical(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = ARM, \n  id = USUBJID,\n  denominator = adsl,\n  over_variables = TRUE\n) \n\ngroup1 group1_level group2 group2_level variable 1   ARM 2   ARM 3   ARM 4   ARM 5   ARM 6   ARM 7   ARM 8   ARM 9   ARM 10 ARM Placebo  ..ard_hierarchical_overall.. variable_level stat_name stat_label stat 1 Placebo n n 86 2 Placebo N N 254 3 Placebo p % 0.339 4 Xanomeli… n n 84 5 Xanomeli… N N 254 6 Xanomeli… p % 0.331 7 Xanomeli… n n 84 8 Xanomeli… N N 254 9 Xanomeli… p % 0.331 10 TRUE n n 31\n\n\n\ntfrmt - Nicely formatting ARDs\n\nCode\n# Table Exercise: AE summary table using {tfrmt}\n\n# For this exercise, we will use the AE ARD from the last section to\n# create a {tfrmt} table\n\n\n# Setup: run this first! --------------------------------------------------\n\n## Load necessary packages\nlibrary(cards)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(tfrmt)\n\n## Import & subset data\nadsl &lt;- pharmaverseadam::adsl |&gt; \n  dplyr::filter(SAFFL==\"Y\")\n\nadae &lt;- pharmaverseadam::adae |&gt; \n  dplyr::filter(SAFFL==\"Y\") |&gt; \n  dplyr::filter(AESOC %in% unique(AESOC)[1:3]) |&gt; \n  dplyr::group_by(AESOC) |&gt; \n  dplyr::filter(AEDECOD %in% unique(AEDECOD)[1:3]) |&gt; \n  dplyr::ungroup()\n\n## Create AE Summary using cards\nard_ae &lt;- ard_stack_hierarchical(\n  data = adae,\n  variables = c(AESOC, AEDECOD),\n  by = ARM, \n  id = USUBJID,\n  denominator = adsl,\n  over_variables = TRUE,\n  statistic = ~ c(\"n\", \"p\")\n) \n\n\n# Exercise ----------------------------------------------------------------\n\n# A. Convert `cards` object into a tidy data frame ready for {tfrmt}. \n#    Nothing to do besides run each step & explore the output!\n\nard_ae_tidy &lt;- ard_ae |&gt; \n  shuffle_card(fill_hierarchical_overall = \"ANY EVENT\") |&gt; \n  prep_big_n(vars = \"ARM\") |&gt; \n  prep_hierarchical_fill(vars = c(\"AESOC\",\"AEDECOD\"),\n                         fill_from_left = TRUE) |&gt; \n  dplyr::select(-c(context, stat_label, stat_variable)) \n\n\n# B. Create a basic tfrmt, filling in the missing variable names\n\nae_tfrmt &lt;- tfrmt(\n  group = AESOC,\n  label = AEDECOD,\n  param = , # fill\n  value = , # fill\n  column = , # fill\n  body_plan = body_plan(\n    frmt_structure(group_val = \".default\", label_val = \".default\", \n                   frmt_combine(\n                     \"{n} ({p}%)\",\n                     n = frmt(\"xx\"),\n                     p = frmt(\"xx\", transform = ~ . *100)\n                   )\n    )\n  ),\n  big_n = big_n_structure(param_val = \"bigN\") \n) \n\nprint_to_gt(ae_tfrmt,\n            ard_ae_tidy)\n\n\n# C. Switch the order of the columns so Placebo is last\n\nae_tfrmt &lt;- ae_tfrmt |&gt; \n  tfrmt(\n    col_plan = col_plan(\n      \"Placebo\",\n      starts_with(\"Xanomeline\")\n    )\n  )  \n\nprint_to_gt(ae_tfrmt, ard_ae_tidy)\n\n\n# D. Add a title and source note for the table\n\nae_tfrmt &lt;- ae_tfrmt |&gt; \n  tfrmt(\n    title = \"\", # fill\n    footnote_plan = footnote_plan(\n      footnote_structure(\"\") # fill with footnote text\n    ) \n  )\n\nprint_to_gt(ae_tfrmt, ard_ae_tidy)\n\n\n\ngtsummary - more tables\n\nHow to adopt gtsummary at your company\nLarge user base, catch edge cases\n\n\n\nteal - helps build shinys\nhttps://insightsengineering.github.io/teal/latest-tag/\n\n\nHow to contribute\n\nuse the package\nwrite a blog or create a template\nsubmit issues on git\njoin as a contributor"
  },
  {
    "objectID": "wednesday.html",
    "href": "wednesday.html",
    "title": "Wednesday Notes",
    "section": "",
    "text": "Keynote (9am)\nPresenter: Jonathan McPherson (jmcphers)\n\nDevelopment of RStudio & Positron\n\nCreating and improving tools\nSampling bias: only hear from top users\nmissing values: find your target audience\nusers don’t know what they want\nwatch people using your tool\ntake complicated things simple\nMEET PEOPLE WHERE THEY ARE\nYes: “You should make a seperate folder for each project”\n\nBut: not required (good idea - but forcing it is not ergonomic)\n\nYes: “Don’t change the working directory” (not portable)\n\nBut: sometimes people want to (at the expense of ideological purity)\n\nEmpower users\nVS Code’s extension model is a core reason for its success\n\n\n\nPositron\n\nR and Python languages are extensions\ndata science workbench\nCore functionality\nExtensions by open-source solve edge-cases\nOutput: PDF -&gt; Effect: less time search for info\nTool’s output is shaped by its design\nA tool is a statement about what you want the world to become\nTools communicate a point of view\nPositron:\n\nther should be many languages that talk together\nscientific communications\nreproducible\nscience should be free and open\n\nIs RStudio phasing out? No\nPositron is more versitile\nMore generic tool (Positron): not as good for specific purpose\nMore specific tool (RStudio): fit for purpose\nNew lenguage upcoming: Javascript\n\n\n\n\nPositron (10:20am)\n\nIde-ntity Crisis: Choosing the right tool for me\n\nVS Code\nPositron\nRStudio\nJupyter Notebook\nchoose IDE that fits your project/workflow\n\n\n\nTips and Tricks for Positron\n\npersonalizing your coding space\nmaking data exploration more pleasant\nthoughtful pairing with AI assistant (Positron Assistant)\n\n\n\nOutgrowing your laptop with Positron\nSlides\nGitHub\nhttps://positron.posit.co/remote-ssh.html\n\nuse parquet file formats\narrow, duckplyr, duckdb\nlazy execution\n\n\n\nExploring datasets in Positron\n\nWes McKinney\nPain Points\n\nContext Switching (code &lt;-&gt; figures)\nScale Limitations\nPerformace (with large datasets)\nLow Information Density (time looking for features)\n\nPositron Data Viewer Features\n\nhistogram, summnary stats, N missing\nduckdb backend for fast filtering\npinning columns (freeze panes)\n\n\n\n\n\nRapid Fire 10min talks\n\nUse Your Data Skills for Good: Ideas for Community Service\nMake Big Geospatial Data Accessible with Arrow\nApproaching Positron from RStudio\nBrand YML and Dark Mode in Quarto\n\ncreate a _brand.yml for REGN\n\nAutomating Event Scheduling with Python in Positron\n\na lot of up front work for time savings in long run\n\nPutting an {ellmer} AI in production with the blessing of IT\nEnabling geospatial workflow management with targets: an R package origin story\nPlotgardener – Genomic Data Visualization Made Easy\nWhat we’re doing to make Quarto fast(er)\n\nupdates to quarto to make rendering faster!\n\nMultiple Console Sessions in Positron\nIt’s all fun and games til your analysis code is finished: the player package in R\nBirthing the pregnancy package\n\n\n\nQuarto\n\nsurveydown\n\nA Markdown-Based Platform for Interactive and Reproducible Surveys Using Quarto and Shiny\n\n\n\nQuarto Automation\n\nUsing Quarto to Improve Formatting and Automate the Generation of Hundreds of Reports\nGitHub Repo\n\n\n\nSimplify R Adoption\n\nInstant Impact: Developing {docorator} to Simplify R Adoption for Teams\n\n\n\nExpanding quarto capabilities\n\nBeyond the Basics: Expanding Quarto’s Capabilities with Lua\n\n\n\n\nKeynote: Combining AI and Human Intelligence\nThis presentation explores the complex and often contradictory nature of large language models (LLMs) in data science, acknowledging the simultaneous excitement and apprehension that we feel toward these technologies. We’ll provide a practical framework to help you understand the LLM ecosystem (from foundation models and hosting to SDKs and applications) that supports our current philosophy: augmenting, not replacing human intelligence. The talk demonstrates how Posit is addressing this space through two complementary approaches: building SDKs and tools that help you create your own LLM-powered solutions, and developing integrated LLM capabilities directly into data science workflows through tools like Positron assistant and databot. We’ll showcase practical, immediately useful applications while addressing current limitations, providing you with both the emotional preparation and technical foundation needed to effectively leverage LLMs in their data science practice today."
  },
  {
    "objectID": "photos.html",
    "href": "photos.html",
    "title": "Pictures",
    "section": "",
    "text": "Geogria Aquarium\nQuarto Help"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "posit::conf(2025)",
    "section": "",
    "text": "Introduction\n\nWe attended the 2025 Posit Conference in Atlanta, GA.\nThis is a website organizing all the topics and notes from the sessions we attended.\nGitHub Repository for all conference materials.\n\n\n\nREGN Attendance\n\nPeter Ehmann (PMQTS)\nNick Giangreco (PMQTS)\nRyan Yu (BDM - stat programming)\nSri Pavan Vemuri (BDM - stat programming)\nRegis James (DADS)\nMarina Lehmkuhl (BICS)\n\n\n\nSessions\n\n\n\nSession\nDay\nTime\nAttendee\n\n\n\n\nR/Pharma Summit\nMonday, Sept 15\n9am-5pm\nPeter & Nick\n\n\nPharmaverse for Regulatory Submissions\nTuesday, Sept 16\n9am-5pm\nPeter\n\n\nProgramming with LLM APIs\nTuesday, Sept 16\n9am-5pm\nNick\n\n\nKeynote (RStudio -&gt; Positron) - Jonathan McPherson\nWednesday, Sept 17\n9:00am\nPeter & Nick\n\n\nPositron\nWednesday, Sept 17\n10:20am\nPeter\n\n\nShiny for Humans\nWednesday, Sept 17\n10:20am\nNick\n\n\nLightning Talks\nWednesday, Sept 17\n1:00pm\nPeter\n\n\nShiny for Humans\nWednesday, Sept 17\n1:00pm\nNick\n\n\nQuarto\nWednesday, Sept 17\n2:40pm\nPeter\n\n\nGet Your Ducks in a Row (Databases)\nWednesday, Sept 17\n2:40pm\nNick\n\n\nAI and human intelligence in data science - Joe Cheng\nWednesday, Sept 17\n4:00pm\nPeter & Nick\n\n\n\nThursday, Sept 18\n9am\nPeter & Nick\n\n\n\nThursday, Sept 18\n10:20am\nPeter\n\n\n\nThursday, Sept 18\n10:20am\nNick\n\n\n\nThursday, Sept 18\n1:00pm\nPeter\n\n\n\nThursday, Sept 18\n1:00pm\nNick\n\n\n\nThursday, Sept 18\n2:40pm\nPeter\n\n\n\nThursday, Sept 18\n2:40pm\nNick\n\n\n\nThursday, Sept 18\n4:00pm\nPeter & Nick\n\n\n\n\n\nEvents\n\n\n\n\n\n\n\n\n\nSession\nDay\nTime\nAttendee\n\n\n\n\nrPharma meetup at SKOL Brewery\nSunday, Sept 14\n7-9pm\nPeter & Nick\n\n\nrPharma social event at White Oak\nMonday, Sept 15\n6-8pm\nPeter & Nick\n\n\nWelcome Reception\nTuesday, Sept 16\n5-7pm\nPeter & Nick\n\n\nGeorgia Aquarium\nWednesday, Sept 17\n7-9pm\nPeter & Nick\n\n\n\n\n\nCompanies\nOrganizations we interacted with:\n\nBiotech/Pharma\n\nRoche/Genentech\n\nDaniel Sjoberg\n\nNovartis\nEli Lilly\nJ&J\nGSK\n\nBecca Krouse\n\nSanofi\nAbbvie\n\nCROs\n\nFlatiron Health\nDenali\nSyneos\nAtorus\nWu Consulting\nAppsilon - using teal & LLM to generate quick/simple Shiny apps\n\nPosit Connect (Joe Roberts - rep)\n\nError: “Database is locked.” - just keep trying to publish, not an error with code\nGetting metrics from API - Regis made an app, but API data formatting changed\n\n\n\n\nMajor Takeaways\n\nPlaceholder\nPlaceholder\nPlaceholder"
  },
  {
    "objectID": "rPharma.html",
    "href": "rPharma.html",
    "title": "R/Pharma Summit",
    "section": "",
    "text": "About\n\nOrganizers:\n\nPhil Bowsher (Posit)\nJames Black (Roche)\nHarvey Lieberman (Novartis)\nKatie Igartua (Tempus)\n\nAttendance: 100+ people from pharma, biotech, and CRO/contractors\nLink: https://rinpharma.github.io/rinpharma-summit-2025/\nSponser: Open Source in Pharma\n\n\nREGN Attendees\n\nPeter Ehmann (PMQTS)\nNick Giangreco (PMQTS)\nRyan Yu (BDM)\nSri Pavan Vemuri (BDM)\n\n\n\nAtorus\n\nSteve Nicholas\nAshley Tarasiewicz\n\n\n\n\nROI in Open Source\n\nWhy use open-source?\n\ncollaboration, faster innovation\nnot just R, but python\nopens up talent pool\nnot spending time training to learn SAS\nwhat are students coding in grad school\n\n\n\nWhat is the ROI?\n\ndifficult to measure\nprove it with POC\ntipping point (financial cost)\n\npropriety vs.\nopen-source\n\nexperiment SAS vs. R timing to program SDTM tables\n\nautomation\ncustomization\nfinal product\n\nnot just cost, but mindset shift\nPMQTS - analagous to shift from siloed coding to best practices\n\nsavings are not apparent up-front\nROI is difficult to calculate and communicate\nPOC and reach tipping point\n\n\n\n\nWho do we need to influence?\n\nhealth authorities\nbusiness IT\n\n\n\nWhat to demystify?\n\nvalidation\nreproducibility\nopen-source\n\n\n\n\nQuality in Open-Source\n\nLinks\n\nhttps://rpodcast.quarto.pub/quality-rphsummit2025/#/titleslide\nhttps://rstats.wtf/\n\n\n\nWhat is quality\nQuality Assurance (QA) and Quality Control (QC) are two distinct but interconnected components crucial to ensuring pharmaceutical products’ safety, efficacy, and reliability. QA and QC in the pharmaceutical industry collectively form a comprehensive framework for maintaining high-quality standards throughout pharmaceutical manufacturing.\n\n\nBenefits of open-source\n\nTFL generation\nMulti use tools: shiny, packages (don’t have to start from skratch)\nData repository\n\n\n\nWhy open-source\n\nUser facing vs. Quality facing documentation (know your audience)\nUser -&gt; see underlying code and flag issues\nQuality -&gt; should know author(s) and tests performed (maintenance strategy)\nMaintenance\n\nproject re-assinged\nemployee leaves (turnover)\nphase out\nGIT!!! - learning curve is steep (barrier to entry)\n\ndevelopment\ntransparency\nbranching - try things and not break\n\nstandardization vs. harmonization !!!\nconsider yourself as a collaborator\nintangible\n\ninvestment\neliminating resistance to change\nembrace new approaches\nspeak the same language (get on the same level) - use non-technical terms\n“thats how it worked before” is not a reason (ex Gen AI)\nrigid vs flexible mindset\n\n\n\n\n\n\nGenAI and Clinical Trials\n\nGilead\nEli Lilly\n\n\nLLMs\n\nLLM is an instruction following engine with no memory\nProvide:\n\nprecise instructions\nsupply the right information at the right time\n\nTool Calls\nModel, Context, Protocol (MCP)\nevals are critical for testing and development\nwe can’t test everything, and LLMs will screw up\n\nadopt version control (oversight)\n\ncreate ways to find errors\nCurrent state: do not make plans before piloting\n\nplay with current tools\ndo not plan to put things in production in 2025\nfigure out what it is good at, vs not good at\n\nUse cases:\n\nmostly documentation\nnobody mentioned as junior analyst (@Natalie)\n\nBuild foundation to be ready when the models improve\nIs it doing what it’s meant to do?\n\nGive it to high performers\nIf it fails, it will get shut down early.\n\n\n\n\nComprehensive C-QT Analysis From Data to Deliverables\nhttps://a2-ai.github.io/cqtkit-docs/versions/1.0.2/\n\n\n\nGenAI in Positron\n\nPolyglot IDE - R, Python, SQL, Rust, Julia,\nFork of VS Code\nClaude integration into Positron\n\nknows all environment variables\n\n\n\n\nValidation Hub\n\nR consortium project\n10 organizations\nInvolvement from health authorities\n\n\n\nRoundtable 1 - Perspectives of CROs\n\nDenali\nCytel\nAtorus\nSyneos\n\nTakeaway: Need to have time for learning & leveling up to enable open-source adoption.\n\n\nRoundtable 2 - Open-Source Change Manangement\n\nGSK\nGenentech/Roche\n\nTakeaway: Trainings are ineffective, need to implement best practices in everyday work.\n\nGSK uses “just in time training”\nAdvanced programmer is teamed with novice programmer to implement best practices in a real-world setting\nCoders will only adopt change if they have to"
  },
  {
    "objectID": "thursday.html",
    "href": "thursday.html",
    "title": "Thursday Notes",
    "section": "",
    "text": "Keynote (9am)"
  }
]